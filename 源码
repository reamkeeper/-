#include<iostream>
using namespace std;
#define MAXSIZE 5
typedef int KeyType;
typedef struct{
	KeyType key;
	
}RedType;
typedef struct{
	RedType r[MAXSIZE+1];
	int length;
}Sqlist;
void operator>>(istream &cin,Sqlist &L){
	cin>>L.r[MAXSIZE].key;
	
}
ostream & operator<<(ostream & cout,Sqlist &L){
	cout<<L.r[MAXSIZE].key;
	return cout;
}
Sqlist *init_Sqlist(){
	Sqlist *L;
	L=new Sqlist;
	L->length=0;
	return L;
}
void define(Sqlist *L,int n){
	cout<<"输入数"<<endl;
	for(int i=1;i<=n;i++){
		cin>>L->r[i].key;
		L->length++;
	}
}
void show(Sqlist* L){
	for(int i=1;i<=L->length;i++){
		cout<<L->r[i].key<<" ";
	}
	cout<<endl;
}
void insert(Sqlist& L){
	int i,j;
	for(i=2;i<=L.length;i++){
		if(L.r[i].key<L.r[i-1].key){
			L.r[0]=L.r[i];
			L.r[i]=L.r[i-1];
			for(j=i-2;L.r[0].key<L.r[j].key;j--){
				L.r[j+1]=L.r[j];
			}
			L.r[j+1]=L.r[0];
		}
	}
}
int main(){
	Sqlist *L;
	L=init_Sqlist();
	 define(L,MAXSIZE);
	 cout<<"排序前"<<endl; 
	 show(L);
	 cout<<"排序后"<<endl;
	 insert(*L);
	 show(L);
	 return 0;
}
